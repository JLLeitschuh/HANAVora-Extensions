package org.apache.spark.sql.catalyst.plans.logical

import org.apache.spark.sql.catalyst.expressions.{Attribute, AttributeSet}

/**
  * Hierarchy logical plan.
  *
  * @param spec The spec of the hierarchy, has to be logical plan to allow copying (SPARK-8658).
  * @param node The node attribute.
  */
case class Hierarchy(spec: LogicalPlan, node: Attribute) extends UnaryNode {

  override def child: LogicalPlan = spec

  override def output: Seq[Attribute] = child.output :+ node

  override lazy val resolved: Boolean =
    expressions.forall(_.resolved) && childrenResolved && spec.resolved && node.resolved

  lazy val identifier: String = spec.asInstanceOf[HierarchySpec].identifier

  /**
    * When checking missing input attributes, ignore the node attribute
    * (which is generated by this plan) and any pruned attributes in the spec.
    */
  override def missingInput: AttributeSet =
    references -- inputSet -- spec.asInstanceOf[HierarchySpec].prunedAttributes - node
}
